<?xml version="1.0"?>
<launch>

  <arg name="robot_name"                                 default="r0" />
  <arg name="position"                                   default="-x 0.0 -y 0.0 -z 0.1" />
  <arg name="model_dir"                                  default="$(find car_gazebo_models)/models"/>
  <arg name="platform_dir"                               default="/platforms/car" />
  <arg name="launch_robot_state_publisher"               default="true" />
  <arg name="launch_ground_truth_robot_state_publisher"  default="false" />
  
  <group ns="$(arg robot_name)">

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg model_dir)/$(arg platform_dir)/main.xacro' model_dir:=$(arg model_dir) platform_dir:=$(arg platform_dir) namespace:=$(arg robot_name)"/>
  
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a robot -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_mobile_base" args="$(arg position) -urdf -param robot_description -model $(arg robot_name)" respawn="false"/>

    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/camera/depth/color/points"/>
      <remap from="scan" to="/camera/scan"/>

      <rosparam>
        target_frame: camera_link
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 1.0

        angle_min: -1.5708
        angle_max: 1.5708
        angle_increment: 0.0087
        scan_time: 0.333
        range_min: 0.45
        range_max: 4.0
        use_inf: true

        concurrency_level: 1
      </rosparam>
    </node>

    <!-- Run robot state publisher -->
    <group if="$(arg launch_robot_state_publisher)">
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0"/>
        <param name="tf_prefix" type="string" value="$(arg robot_name)"/>
      </node>
      <group if="$(arg launch_ground_truth_robot_state_publisher)">
        <group ns="ground_truth">
          <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="100.0"/>
            <param name="tf_prefix" type="string" value="$(arg robot_name)/ground_truth"/>
          </node>
        </group>
      </group>
    </group>
  </group> 
  
</launch>
